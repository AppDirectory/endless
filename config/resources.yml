# Resources file

FrontendBucket:
  Type: AWS::S3::Bucket
  Properties:
     BucketName: ${self:custom.s3.bucketName}
     WebsiteConfiguration:
       IndexDocument: ${self:custom.s3.index}
ProductTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: ${self:custom.dynamodb.prefix}-product
    AttributeDefinitions:
      - AttributeName: productID
        AttributeType: S
    KeySchema:
      - AttributeName: productID
        KeyType: HASH
    ProvisionedThroughput:
      ReadCapacityUnits: 5
      WriteCapacityUnits: 5
CustomerTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: ${self:custom.dynamodb.prefix}-customer
    AttributeDefinitions:
      - AttributeName: customerID
        AttributeType: S
    KeySchema:
      - AttributeName: customerID
        KeyType: HASH
    ProvisionedThroughput:
      ReadCapacityUnits: 5
      WriteCapacityUnits: 5
CartTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: ${self:custom.dynamodb.prefix}-cart
    AttributeDefinitions:
      - AttributeName: cartID
        AttributeType: S
    KeySchema:
      - AttributeName: cartID
        KeyType: HASH
    ProvisionedThroughput:
      ReadCapacityUnits: 5
      WriteCapacityUnits: 5
DynamoDBIamPolicy:
  Type: AWS::IAM::Policy
  DependsOn: 
    - ProductTable
    - CustomerTable
    - CartTable
  Properties:
    PolicyName: lambda-dynamodb
    PolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:*:*:table/${self:custom.dynamodb.prefix}-product
            - arn:aws:dynamodb:*:*:table/${self:custom.dynamodb.prefix}-customer
            - arn:aws:dynamodb:*:*:table/${self:custom.dynamodb.prefix}-cart
    Roles:
      - Ref: IamRoleLambdaExecution